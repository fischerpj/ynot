---
title: "Observables"
author: "granPiero"
date: "2024-10-12"
image: "observablejs.jpg"
categories: [it]
format: 
  html:
    comments:
      utterances: 
        repo: "fischerpj/ynot"
---

> We demonstrate interactions with **ObservableJS** Inputs.text, Input.button in a quarto document. And **abandon** due to CSS styling complexity.

```{ojs}
import { Inputs } from "@observablehq/inputs";
import { html } from "@observablehq/stdlib";

// Create an input field for the parameter
viewof param = Inputs.text({ 
  label: "Search", 
  placeholder: "Type here..." ,
  value: "gen1:1"
});

// Construct the API URL using the input parameter
myurl = `https://hall.pjafischer.workers.dev/passage/?param=${param}`;

// Fetch the data dynamically
mydata = (await fetch(myurl)).json();

// Display the htmlraw property inside a div
html`${mydata.htmlraw}`;
```

## Inputs.text

```{ojs}

// Create an Inputs.text element
viewof userInput = Inputs.text({
  label: "Enter",
  placeholder: "Type here",
  value: "Initial text"
})

// Display the input value
userInput
endpoint = "https://jsfapi.netlify.app/.netlify/functions/bgw"
url = endpoint+"?param="+userInput
url
```

## button.click

```{ojs}
// Create a button using Inputs.button
viewof myButton = Inputs.button("Count me!");

// By default, shows the #clicks
myButton
```

```{ojs}

// Create HTML nested elements: div, h1, p, iframe
myHtml = html`<div>
  <h1>Hello, Observable!</h1>
  <p>This is a paragraph followed by AN IFRAME within a div element.</p>
  <iframe src="https://jsfapi.netlify.app/.netlify/functions/bgw?param=gen1:1!SG21" title="STATIC IFRAME jsfapi" width="400" height="150">
</div>`;

// Display the HTML element
myHtml
```
