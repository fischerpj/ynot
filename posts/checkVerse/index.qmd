---
title: "checkVerse"
image: "bugsbunny.png"
execute:
  echo: false
---

> GO check validity of BibleRef *THEN* fetch&display (with *observableJS).*

::: {#inputDiv}
:::

```{ojs}
import { html } from "@observablehq/stdlib";

/*
viewof name = html`<input type="text" oninput="this.dispatchEvent(new CustomEvent('input'))" placeholder="Enter your name">`
name
md`Hello, **${name}**`
*/

// INPUT
viewof userRef = html`
  <input 
    type="text" 
/*    oninput="this.dispatchEvent(new CustomEvent('input'))" */
    value= "num1:1!KJV"
    class="form-control" 
    style="width: 150px;"
    >`

md`Hi Ref, **${userRef} ${bcve.book}**`

/*
viewof userRef.addEventListener("touchstart", function(event) {
    event.preventDefault(); // Prevent default scrolling behavior
}, { passive: false });    
*/

// TRIGGER    
viewof appendButton = html`
  <button class="btn btn-primary">Append</button>`

// VIEWOF
html`<div class="row container">
  Search&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  ${viewof userRef}
  ${viewof appendButton}
  </div>`

//===== CHECK 
bcve = (() => {

  const editions = new Set(['KJV','ESV','SG21',"NGU-DE","SCH2000"]);
  
  // Split by multiple separators: comma, semicolon, and pipe
  const [bc,verse,edition="SG21"] = userRef.split(/[:!]/);
  // emptied edition is doomed invalid 
  const valid_edition = editions.has(edition) ? edition : ""
  // strip trailing digits
  const book = bc.split(/(\d+)$/)
  
  // elaborate RETURN value
  return {
    "valid_edition": valid_edition,
    "edition": edition,
    "verse": verse,
    "bc": bc,
    "book": book[0],
    "input": userRef
  };
 
})();

bibleBooks = (() => {
  const bibleBooks  = {
        "Genesis": ["Ge", "Gn", "GEN"],
        "Exodus": ["Ex", "EXOD"],
        "Leviticus": ["Lv", "LEV"],
        "Numbers": ["Nu", "NUM"],
        "Deuteronomy": ["Dt","DEUT"],
        "Joshua": ["Jo", "JOSH","Jos"],
        "Judges": ["Jg", "JUDG",'Jug'],
        "Ruth": ["Ru", "RUTH","Rut"],
        "1 Samuel": ["1S", "1SAM"],
        "2 Samuel": ["2M", "2SAM"],
        "1 Kings": ["1K", "1KGS"],
        "2 Kings": ["2K", "2KGS"],
        "1 Chronicles": ["1C", "1CHRO","1Chr"],
        "2 Chronicles": ["2C", "2CHRO","2Chr"],
        "Ezra": ["Ez", "EZRA","Esd"],
        "Nehemiah": ["Nh", "NEH"],
        "Esther": ["Es", "ESTH"],
        "Job": ["Jb", "JOB"],
        "Psalms": ["Ps", "PSA"],
        "Proverbs": ["Pv", "PROV"],
        "Ecclesiastes": ["Ec", "ECC"],
        "Song of Solomon": ["So", "SONG","Cc"],
        "Isaiah": ["Is", "ISA"],
        "Jeremiah": ["Jr", "JER"],
        "Lamentations": ["Lm", "LAM"],
        "Ezekiel": ["Ek", "EZEK"],
        "Daniel": ["Dn", "DAN"],
        "Hosea": ["Ho", "HOSEA"],
        "Joel": ["Jl", "JOEL"],
        "Amos": ["Am", "AMOS"],
        "Obadiah": ["Ob", "OBAD"],
        "Jonah": ["Jn", "JONAH"],
        "Micah": ["Mc", "MICAH"],
        "Nahum": ["Na", "NAHUM"],
        "Habakkuk": ["Ha", "HAB"],
        "Zephaniah": ["Zp", "ZEPH"],
        "Haggai": ["Hg", "HAG"],
        "Zechariah": ["Zc", "ZECH"],
        "Malachi": ["Ml", "MAL"],
        "Matthew": ["Mt", "MATT"],
        "Mark": ["Mk", "MARK"],
        "Luke": ["Lk", "LUKE"],
        "John": ["Jh", "JOHN"],
        "Acts": ["Ac", "ACTS"],
        "Romans": ["Rm", "ROM"],
        "1 Corinthians": ["1O", "1COR"],
        "2 Corinthians": ["2O", "2COR"],
        "Galatians": ["Ga", "GAL"],
        "Ephesians": ["Ep", "EPH"],
        "Philippians": ["Ph", "PHIL"],
        "Colossians": ["Cl", "COL"],
        "1 Thessalonians": ["1T", "1THES"],
        "2 Thessalonians": ["2T", "2THES"],
        "1 Timothy": ["1I", "1TIM"],
        "2 Timothy": ["2I", "2TIM"],
        "Titus": ["Ti", "TIT"],
        "Philemon": ["Pm", "PHILE"],
        "Hebrews": ["He", "HEB"],
        "James": ["Jm", "JAS"],
        "1 Peter": ["1P", "1PET"],
        "2 Peter": ["2P", "2PET"],
        "1 John": ["1J", "1JOHN"],
        "2 John": ["2J", "2JOHN"],
        "3 John": ["3J", "3JOHN"],
        "Jude": ["Ju", "JUDE"],
        "Revelation": ["Rv", "REV"]
    }

  // Convert all values to lowercase
    const lowerCaseBibleBooks = Object.fromEntries(
      Object.entries(bibleBooks).map(([book, abbreviations]) => [
        book,
        abbreviations.map(abbr => abbr.toLowerCase())
    ])
  );
  
    return lowerCaseBibleBooks
  })();

book = (() => {
  console.log("bcve triggered" + bcve.book);
  // BOOK validation
  /*
  const bibleBooks = {
        "Genesis": ["Ge", "Gn", "GEN"],
        "Exodus": ["Ex", "EXOD"],
        "Leviticus": ["Lv", "LEV"],
        "Numbers": ["Nu", "NUM"],
        "Deuteronomy": ["Dt","DEUT"],
        "Joshua": ["Jo", "JOSH","Jos"],
        "Judges": ["Jg", "JUDG",'Jug'],
        "Ruth": ["Ru", "RUTH","Rut"],
        "1 Samuel": ["1S", "1SAM"],
        "2 Samuel": ["2M", "2SAM"],
        "1 Kings": ["1K", "1KGS"],
        "2 Kings": ["2K", "2KGS"],
        "1 Chronicles": ["1C", "1CHRO","1Chr"],
        "2 Chronicles": ["2C", "2CHRO","2Chr"],
        "Ezra": ["Ez", "EZRA","Esd"],
        "Nehemiah": ["Nh", "NEH"],
        "Esther": ["Es", "ESTH"],
        "Job": ["Jb", "JOB"],
        "Psalms": ["Ps", "PSA"],
        "Proverbs": ["Pv", "PROV"],
        "Ecclesiastes": ["Ec", "ECC"],
        "Song of Solomon": ["So", "SONG","Cc"],
        "Isaiah": ["Is", "ISA"],
        "Jeremiah": ["Jr", "JER"],
        "Lamentations": ["Lm", "LAM"],
        "Ezekiel": ["Ek", "EZEK"],
        "Daniel": ["Dn", "DAN"],
        "Hosea": ["Ho", "HOSEA"],
        "Joel": ["Jl", "JOEL"],
        "Amos": ["Am", "AMOS"],
        "Obadiah": ["Ob", "OBAD"],
        "Jonah": ["Jn", "JONAH"],
        "Micah": ["Mc", "MICAH"],
        "Nahum": ["Na", "NAHUM"],
        "Habakkuk": ["Ha", "HAB"],
        "Zephaniah": ["Zp", "ZEPH"],
        "Haggai": ["Hg", "HAG"],
        "Zechariah": ["Zc", "ZECH"],
        "Malachi": ["Ml", "MAL"],
        "Matthew": ["Mt", "MATT"],
        "Mark": ["Mk", "MARK"],
        "Luke": ["Lk", "LUKE"],
        "John": ["Jh", "JOHN"],
        "Acts": ["Ac", "ACTS"],
        "Romans": ["Rm", "ROM"],
        "1 Corinthians": ["1O", "1COR"],
        "2 Corinthians": ["2O", "2COR"],
        "Galatians": ["Ga", "GAL"],
        "Ephesians": ["Ep", "EPH"],
        "Philippians": ["Ph", "PHIL"],
        "Colossians": ["Cl", "COL"],
        "1 Thessalonians": ["1T", "1THES"],
        "2 Thessalonians": ["2T", "2THES"],
        "1 Timothy": ["1I", "1TIM"],
        "2 Timothy": ["2I", "2TIM"],
        "Titus": ["Ti", "TIT"],
        "Philemon": ["Pm", "PHILE"],
        "Hebrews": ["He", "HEB"],
        "James": ["Jm", "JAS"],
        "1 Peter": ["1P", "1PET"],
        "2 Peter": ["2P", "2PET"],
        "1 John": ["1J", "1JOHN"],
        "2 John": ["2J", "2JOHN"],
        "3 John": ["3J", "3JOHN"],
        "Jude": ["Ju", "JUDE"],
        "Revelation": ["Rv", "REV"]
    };
    
  // Convert all values to lowercase
  const lowerCaseBibleBooks = Object.fromEntries(
    Object.entries(bibleBooks).map(([book, abbreviations]) => [
        book,
        abbreviations.map(abbr => abbr.toLowerCase())
    ])
  );
*/

  // search for match and RETURN UPDATE
  for (const [mybook, abbreviations] of Object.entries(bibleBooks)) {
        if (abbreviations.includes(bcve.book)) {
          console.log("scan" + mybook)
            bcve["valid_book"] = mybook; 
            bcve["is_valid"] = ( 
              bcve.verse === "" || 
              bcve.valid_edition === "" ||
              bcve.valid_book === ""
              ) ? false : true;
            return bcve
          }
        } 
      // no match at all
            console.log("no match");
            bcve["valid_book"] = "";
            bcve["is_valid"] = ( 
              bcve.verse === "" || 
              bcve.valid_edition === "" ||
              bcve.valid_book === ""
              ) ? false : true;
            return bcve
       // end of match search
})();

// FETCH & DISPLAY
// Call the function with the user's input
fetchPassage = await (async () =>  {
//  console.log(JSON.stringify(mysplit));
  
  if ( book.is_valid ) {
    const url = `https://hall.pjafischer.workers.dev/passage/?param=${userRef}`;
    console.log("following is_valid:" + url);
    
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return await response.json();
    } catch (error) {
        return { error: "Failed to fetch data" };
    }
  } else {
      return "ref is invalid"
  }

})();

// Display the fetched content
html`<div>${fetchPassage.htmlraw}</div>`;

append = (() => {
  document.getElementById("outputDiv").innerHTML = JSON.stringify(book)
  })();

```

```{ojs}
function storage_(){
  return localStorage.getItem("refidArray")
} 

//viewof time = Inputs.button("Update", {value: null, reduce: () => new Date})
//viewof time = Inputs.button("Update", {value: new Date, reduce: () => storage_()})
//html`<div>${time}</div>`;

//======================================================

//======================================================


//======================================================
//===== FETCH & display

/*



// Update outputDiv dynamically inside mainAnchor
//document.getElementById("outputDiv").innerHTML = content.htmlraw;
// Update inputDiv dynamically inside mainAnchor
//document.getElementById("inputDiv").append(viewof param);
// html`<div>${viewof param}</div>`;
html`<div>${content.htmlraw}</div>`;

html`<div class="row container">
  ${JSON.stringify(bcve_(param))} 
  </div>`

/*
check = ((userref) => {
    const lowerRef = userref.toLowerCase();

    const bibleBooks = {
        "Genesis": ["Ge", "GEN"],
        "Exodus": ["Ex", "EXOD"],
        "Leviticus": ["Lv", "LEV"],
        "Numbers": ["Nu", "NUM"],
        "Deuteronomy": ["Dt", "DEUT"],
        "Joshua": ["Jo", "JOSH","Jos"],
        "Judges": ["Jg", "JUDG",'Jug'],
        "Ruth": ["Ru", "RUTH","Rut"],
        "1 Samuel": ["1S", "1SAM"],
        "2 Samuel": ["2M", "2SAM"],
        "1 Kings": ["1K", "1KGS"],
        "2 Kings": ["2K", "2KGS"],
        "1 Chronicles": ["1C", "1CHRO","1Chr"],
        "2 Chronicles": ["2C", "2CHRO","2Chr"],
        "Ezra": ["Ez", "EZRA","Esd"],
        "Nehemiah": ["Nh", "NEH"],
        "Esther": ["Es", "ESTH"],
        "Job": ["Jb", "JOB"],
        "Psalms": ["Ps", "PSA"],
        "Proverbs": ["Pv", "PROV"],
        "Ecclesiastes": ["Ec", "ECC"],
        "Song of Solomon": ["So", "SONG","Cc"],
        "Isaiah": ["Is", "ISA"],
        "Jeremiah": ["Jr", "JER"],
        "Lamentations": ["Lm", "LAM"],
        "Ezekiel": ["Ek", "EZEK"],
        "Daniel": ["Dn", "DAN"],
        "Hosea": ["Ho", "HOSEA"],
        "Joel": ["Jl", "JOEL"],
        "Amos": ["Am", "AMOS"],
        "Obadiah": ["Ob", "OBAD"],
        "Jonah": ["Jn", "JONAH"],
        "Micah": ["Mc", "MICAH"],
        "Nahum": ["Na", "NAHUM"],
        "Habakkuk": ["Ha", "HAB"],
        "Zephaniah": ["Zp", "ZEPH"],
        "Haggai": ["Hg", "HAG"],
        "Zechariah": ["Zc", "ZECH"],
        "Malachi": ["Ml", "MAL"],
        "Matthew": ["Mt", "MATT"],
        "Mark": ["Mk", "MARK"],
        "Luke": ["Lk", "LUKE"],
        "John": ["Jh", "JOHN"],
        "Acts": ["Ac", "ACTS"],
        "Romans": ["Rm", "ROM"],
        "1 Corinthians": ["1O", "1COR"],
        "2 Corinthians": ["2O", "2COR"],
        "Galatians": ["Ga", "GAL"],
        "Ephesians": ["Ep", "EPH"],
        "Philippians": ["Ph", "PHIL"],
        "Colossians": ["Cl", "COL"],
        "1 Thessalonians": ["1T", "1THES"],
        "2 Thessalonians": ["2T", "2THES"],
        "1 Timothy": ["1I", "1TIM"],
        "2 Timothy": ["2I", "2TIM"],
        "Titus": ["Ti", "TIT"],
        "Philemon": ["Pm", "PHILE"],
        "Hebrews": ["He", "HEB"],
        "James": ["Jm", "JAS"],
        "1 Peter": ["1P", "1PET"],
        "2 Peter": ["2P", "2PET"],
        "1 John": ["1J", "1JOHN"],
        "2 John": ["2J", "2JOHN"],
        "3 John": ["3J", "3JOHN"],
        "Jude": ["Ju", "JUDE"],
        "Revelation": ["Rv", "REV"]
    };
//    return JSON.stringify(bibleBooks.Ruth) + ${param};
    
  
    
    return "No valid match found"; // No match case
})(param);
*/

/*
html`<div>VALIDATION is ${JSON.stringify(bcve)}</div>`;
*/
```

::: {#outputDiv}
any output comes here
:::
