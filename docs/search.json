[
  {
    "objectID": "posts/bible-access/index.html",
    "href": "posts/bible-access/index.html",
    "title": "Bible access",
    "section": "",
    "text": "Give access to Bible Texts, version, display, search, pdf as well as to Strong_Numbers and Bible sites. The refs’ full syntax respects “canon”:“ps1:1-3!SG21@bgw”. Workflow is 1.input 2.button.listener 3.iframe.src gets updated. Conclusion: Keep the Input+Button; Use the &lt;iframe for exploration. techno is jsfapi, jscript,\n\n  Get API"
  },
  {
    "objectID": "posts/jsfapi/index.html",
    "href": "posts/jsfapi/index.html",
    "title": "jsfapi",
    "section": "",
    "text": "jsfapi is the raw json API to BibleGateway, hosted by netlify.\n\nhere with outdated technology of iframe which is R_independent! Develop this feature with comments."
  },
  {
    "objectID": "posts/observables/index.html",
    "href": "posts/observables/index.html",
    "title": "Observables",
    "section": "",
    "text": "We demonstrate interactions with ObservableJS Inputs.text, Input.button in a quarto document. And abandon due to CSS styling complexity.\nimport { Inputs } from \"@observablehq/inputs\";\nimport { html } from \"@observablehq/stdlib\";\n\n// Create an input field for the parameter\nviewof param = Inputs.text({ \n  label: \"Search\", \n  placeholder: \"Type here...\" ,\n  value: \"gen1:1\"\n});\n\n// Construct the API URL using the input parameter\nmyurl = `https://hall.pjafischer.workers.dev/passage/?param=${param}`;\n\n// Fetch the data dynamically\nmydata = (await fetch(myurl)).json();\n\n// Display the htmlraw property inside a div\nhtml`${mydata.htmlraw}`;"
  },
  {
    "objectID": "posts/observables/index.html#inputs.text",
    "href": "posts/observables/index.html#inputs.text",
    "title": "Observables",
    "section": "Inputs.text",
    "text": "Inputs.text\n\nviewof userInput = Inputs.text({\n  label: \"Enter\",\n  placeholder: \"Type here\",\n  value: \"Initial text\"\n})\n\n// Display the input value\nuserInput\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nendpoint = \"https://jsfapi.netlify.app/.netlify/functions/bgw\"\nurl = endpoint+\"?param=\"+userInput\nurl"
  },
  {
    "objectID": "posts/observables/index.html#button.click",
    "href": "posts/observables/index.html#button.click",
    "title": "Observables",
    "section": "button.click",
    "text": "button.click\n\nviewof myButton = Inputs.button(\"Count me!\");\n\n// By default, shows the #clicks\nmyButton\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmyHtml = html`&lt;div&gt;\n  &lt;h1&gt;Hello, Observable!&lt;/h1&gt;\n  &lt;p&gt;This is a paragraph followed by AN IFRAME within a div element.&lt;/p&gt;\n  &lt;iframe src=\"https://jsfapi.netlify.app/.netlify/functions/bgw?param=gen1:1!SG21\" title=\"STATIC IFRAME jsfapi\" width=\"400\" height=\"150\"&gt;\n&lt;/div&gt;`;\n\n// Display the HTML element\nmyHtml\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Fetch the data dynamically mydata = (await fetch(myurl)).json();\n// Display the htmlraw property inside a div html${mydata.htmlraw}; ```"
  },
  {
    "objectID": "posts/note_prophete/index.html",
    "href": "posts/note_prophete/index.html",
    "title": "Note Prophete",
    "section": "",
    "text": "This is a Global Note, using EditorJS and localStorage autosave mechanism.\n\n\n\n\nimport { Inputs } from \"@observablehq/inputs\";\nimport { html } from \"@observablehq/stdlib\";\nimport { Bcve, Ref } from \"./BibleBooksCodes_Tables.js\";\n\n_STORAGE_KEY = \"prophete\";\n\n//================== 1. INPUTS\n// Editable input field\nviewof RefInput = Inputs.text({\n  label: \"Search\", \n  value: \"ps42:1!KJV\",\n  style: \"width: 150px;\"\n  })\n\n// Inputs\n/*viewof RefInput = html`&lt;input type=\"text\" \n//  class=\"form-control\" \n  label= \"Search\" \n  style=\"width: 150px;\"\n  value=\"ps40\"/&gt;`;  \n*/\n\n//================== 2. ACCUMULATION\nviewof RefAccu = Inputs.button(\"Keep\", {\n    value: JSON.parse(localStorage.getItem(_STORAGE_KEY)) || [],\n    reduce: (list) =&gt; {\n      const input = viewof RefInput.value;\n      const validated = new Bcve(input);\n      const result = validated.is_valid ? [validated.param, ...list ] : [...list]\n      localStorage.setItem(_STORAGE_KEY, JSON.stringify(result));\n      return result\n  //    return [validated.param, ...list ]\n      }\n    });\n\ndummy = { \n  viewof RefInput.classList.add(\"form-control\");\n  viewof RefAccu.classList.add(\"btn\", \"btn-warning\");\n}\n\n// VIEWOF\nhtml`&lt;div class=\"button-row\"&gt;\n  ${viewof RefInput}\n  ${viewof RefAccu}\n  &lt;/div&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefPreview = {\n  const mb = new Bcve(RefInput);\n  \n  if (mb.is_valid) {\n    const mir = new Ref(mb.param);\n    await mir.fetch_parallel();   // Wait for data to be fetched\n    await mir.data;\n    await mir.displayData(); \n    return mir.outputContent;\n  } else {\n    return `&lt;div&gt;&lt;ul&gt;&lt;li&gt;${mb.param}&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;`  \n  }\n}\n\nhtml`${RefPreview}`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefData = {\n  // DATA is imported from BibleBooksCodes_Tables.js\n//      const refArray =  RefAccu;\n      const mir = new Ref(RefAccu);\n      await mir.fetch_parallel();   // Wait for data to be fetched\n//      await mir.displayData(); \n//      const displayContent = mir.outputContent;\n//      return await mir\n    return await mir.data\n}\n\n//RefData;\n\n// Display the list\nhtml`&lt;ul&gt;${RefData.map(item =&gt; html`&lt;li&gt;&lt;strong&gt;${item.ref}&lt;/strong&gt; ${item.content} &lt;em&gt;${item.version}&lt;/em&gt;&lt;/li&gt;`)}&lt;/ul&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nthis is inputDiv\n\n\n\n\n\nthis is editorDiv\nJésus est plus grand que les prophètes.\nUn prophète transmet les messages de Dieu, sur les sujets d’actualité ou d’avenir. Il est appelé voyant parce qu’il perçoit les réalités invisibles."
  },
  {
    "objectID": "posts/verseComment/index.html",
    "href": "posts/verseComment/index.html",
    "title": "verseComment",
    "section": "",
    "text": "Reference Display with ojs code.\n\n\n\n[“GEN1:1!SG21”, “GEN12:8!SG21”, “REV4:2!SG21”, “GAL2:19!SG21”, “GEN1!SG21”, “GEN1:2!SG21”, “GAL2:20!SG21”, “HEB1:1-2!SG21”, “JOH1:29!SG21”, “Gen1:3!SG21”, “John1:29!SG21”, “Ps14!SG21”, “ACT7:52-53!SG21”, “ACT2:32-35!SG21”, “MAT22:43-45!SG21”, “Gal2:20”]\n\n\n\n\n\n\n\nimport { Bcve, Ref } from \"./BibleBooksCodes_Tables.js\";\n\nRefList_ = (ref) =&gt; {\n  if (Array.isArray(ref)) {\n    return ref\n  } else\n  return [ref]\n}\n \nContentList_  = async (lst) =&gt; {\n    const mir = new Ref(lst);\n    await mir.fetch_parallel();   // Wait for data to be fetched\n    return mir\n  }\n\nContentData_  = async (lst) =&gt; {\n    const mir = new Ref(lst);\n    await mir.fetch_parallel();   // Wait for data to be fetched\n    return await mir.data;\n  }\n\nContentHTML_  = async (lst) =&gt; {\n    const uniqueResult = [...new Set(lst)];\n    const mir = new Ref(uniqueResult);\n    await mir.fetch_parallel();   // Wait for data to be fetched\n    const midata = await mir.data;\n    // Display the list\n    const mihtml = html`&lt;ul&gt;${midata.map(item =&gt; html`&lt;li style=\"line-height: 1.4; margin-bottom: 10px; color: amber\"&gt;&lt;strong&gt;${item.ref}&lt;/strong&gt; ${item.content} &lt;em&gt;${item.version}&lt;/em&gt;&lt;/li&gt;&lt;/div&gt;`)}`\n    return mihtml\n  }\n\nRefShow_ = async (ref) =&gt; {\n  const mb = new Bcve(ref);\n  \n  if (mb.is_valid) {\n    const mir = new Ref(mb.param);\n    await mir.fetch_parallel();   // Wait for data to be fetched\n//    await mir.displayData(); \n//    return mir.outputContent;\n    return await mir.data;\n  } else {\n    return `&lt;div&gt;&lt;ul&gt;&lt;li&gt;${mb.param}&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;`  \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmiref = [\"ROM2:13!SG21\",\"MAT7:21!SG21\",\"JAM1:22!SG21\",\"LUK6:46!SG21\",\"HEB4:2!SG21\",\"1SA3:10!SG21\",\"1SA3:1!SG21\",\"PSA33:9!SG21\",\"ROM1:19-20!SG21\",\"HEB11:3!SG21\",\"JOB38:2!SG21\",\"ACT3:19-20!SG21\",\"LUK11:13!SG21\",\"JOH1:1-12!SG21\",\"JOH2:1-12!SG21\",\"REV19:9!SG21\",\"ROM6:13!SG21\",\"PSA71!SG21\",\"PSA102:17-19!SG21\",\"PSA145:4-5!SG21\",\"DEU6:6-8!SG21\",\"PSA71:17-21!SG21\",\"PSA78:2-8!SG21\",\"PSA42:1!KJV\",\"ISA8:16-18!SG21\",\"PSA16:1!SG21\",\"HEB2:4!SG21\",\"HEB2:12-13!SG21\",\"PSA22:31-32!SG21\",\"GEN1:1!SG21\",\"GEN12:8!SG21\",\"REV4:2!SG21\",\"GAL2:19!SG21\",\"GEN1:2!SG21\",\"GAL2:20!SG21\",\"HEB1:1-2!SG21\",\"JOH1:29!SG21\",\"Gen1:3!SG21\",\"John1:29!SG21\",\"Ps14!SG21\",\"ACT7:52-53!SG21\",\"ACT2:32-35!SG21\",\"MAT22:43-45!SG21\",\"Gal2:20\"]\n\n//ContentList_(miref)\n\n//ContentData_(miref)\n\nContentHTML_(miref)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmiref"
  },
  {
    "objectID": "posts/memo_verse/index.html",
    "href": "posts/memo_verse/index.html",
    "title": "memo_verse",
    "section": "",
    "text": "VALUABLE LEGACY via hsub &gt; jsfapi (maybe slow storage setup): This is on-your-device-only-persistent-memory of bible references, that you accumulate on the fly. However one distinct memory zone per browser"
  },
  {
    "objectID": "posts/gospel-banner/index.html",
    "href": "posts/gospel-banner/index.html",
    "title": "gospel banner",
    "section": "",
    "text": "The animated web presentation of biblical claims is posted at https://xminpi.netlify.app/ppt/gospel-banner/\n\nCapture additional content under comments."
  },
  {
    "objectID": "posts/notes/index.html",
    "href": "posts/notes/index.html",
    "title": "notes",
    "section": "",
    "text": "I merely capture at random my ideas here as comments below."
  },
  {
    "objectID": "posts/cke/index.html",
    "href": "posts/cke/index.html",
    "title": "Welcome To EditorJS",
    "section": "",
    "text": "Proof of Concept of EditorJS\n\nThis is the first SUCCESSFUL post in a Quarto blog to a) use EditorJS and b) localStorage autosave mechanism.\nrelies on yaml =&gt; format: html: include: include-on-header:\n\nEditor.js in Node.js\n\n\n\n\nit’s to be class: EditorjsList, Hey!\nSave Content Load Content"
  },
  {
    "objectID": "posts/etoile/index.html",
    "href": "posts/etoile/index.html",
    "title": "résidence Etoile",
    "section": "",
    "text": "Point de départ de l’habitation au Clos de l’Etoile"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/excursions/index.html",
    "href": "posts/excursions/index.html",
    "title": "excursions",
    "section": "",
    "text": "The root of discoveries.\n\n\nmagnifique Cathédrale Saint-Pierre à Montpellier, érigée par le Pape Urban V.\nMarrons à Brenas le 20 octobre 2024, près de Vernazoubres."
  },
  {
    "objectID": "posts/global-note/index.html",
    "href": "posts/global-note/index.html",
    "title": "Global Note",
    "section": "",
    "text": "This is a Global Note, using EditorJS and localStorage autosave mechanism.\n\n\nthis is inputDiv\nthis is editorDiv"
  },
  {
    "objectID": "posts/verseRun/index.html",
    "href": "posts/verseRun/index.html",
    "title": "verseRun",
    "section": "",
    "text": "Instant View & Persistent Bible Verses.\n\n\n\n\n\nimport { Inputs } from \"@observablehq/inputs\";\nimport { html } from \"@observablehq/stdlib\";\nimport { Bcve, Ref } from \"./BibleBooksCodes_Tables.js\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//================== 1. INPUTS\n// Editable input field\nviewof RefInput = {\n  const inputText = Inputs.text({\n  value: \"Gen1:1\",\n  style: \"width: 80px;\"\n  })\n  return inputText\n}\n\n\n\n\n\n\n\nviewof AccuStorage = {\n  //  INITIALISATION READ from LocalStorage\n  const _STORAGE_KEY = \"prophete\"\n  const stored = JSON.parse(localStorage.getItem(_STORAGE_KEY))\n  const _INITIAL = stored ?? [\"Gen1:1\"]\n  \n  const accuButton = Inputs.button(\"Store\", {\n    value: _INITIAL,\n    reduce: (list) =&gt; {\n      const input = viewof RefInput.value;\n      const validated = new Bcve(input);\n      const result = validated.is_valid ? [validated.param, ...list ] : [...list]\n      const uniqueResult = [...new Set(result)];\n  // STORE persistent\n      localStorage.setItem(_STORAGE_KEY, JSON.stringify(uniqueResult));\n      return uniqueResult // new accumulated value\n      } // end of reduce\n    });\n    \n    return accuButton\n}\n\nviewof HelpButton = {\n  const hbut = Inputs.button(\"Help\");\n  return hbut\n}\n\nviewof CopyButton =  Inputs.button(\"Clip\",{\n    value: null,\n    reduce: () =&gt; { \n      // Copy to clipboard\n      navigator.clipboard.writeText(JSON.stringify(AccuStorage))\n        .then(() =&gt; console.log('Copied to clipboard!'))\n       .catch(err =&gt; console.error('Failed to copy:', err));\n    }\n});\n\n// augmet action logic with cell to storage binding \nviewof RazButton = {\n  const _STORAGE_KEY = \"prophete\"\n  const razbut = Inputs.button(\"NOPE\",{\n    value: null,\n    reduce: () =&gt; { \n //       localStorage.setItem(_STORAGE_KEY, JSON.stringify(AccuStorage));\n    }\n  });\n  return razbut\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//================== REACTIVE PREVIEW OF INPUT \nRefPreview = {\n  const mb = new Bcve(RefInput);\n  \n  if (mb.is_valid) {\n    const mir = new Ref(mb.param);\n    await mir.fetch_parallel();   // Wait for data to be fetched\n//    await mir.displayData(); \n//    return mir.outputContent;\n    return await mir.data;\n  } else {\n    return `&lt;div&gt;&lt;ul&gt;&lt;li&gt;${mb.param}&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;`  \n  }\n}\n\n\n\n\n\n\n\nrestyling = {\n  viewof AccuStorage.classList.add(\"btn\", \"btn-warning\");\n  viewof HelpButton.classList.add(\"btn\", \"btn-info\");\n  viewof CopyButton.classList.add(\"btn\", \"btn-success\");\n  viewof RazButton.classList.add(\"btn\", \"btn-danger\");\n\n  // Very Great\n  const mib = viewof AccuStorage.querySelector('button.btn-quarto');\n  if (mib) {\n    mib.classList.remove('btn-quarto');\n    mib.classList.add('btn','btn-warning');\n  }\n  \n  const hbut = viewof HelpButton.querySelector('button.btn-quarto');\n  if (hbut) {\n    hbut.classList.remove('btn-quarto');\n    hbut.classList.add('btn', 'btn-info');\n  } \n  \n  const copbut = viewof CopyButton.querySelector('button.btn-quarto');\n  if (copbut) {\n    copbut.classList.remove('btn-quarto');\n    copbut.classList.add('btn-success');\n  }  \n\n const razbut = viewof RazButton.querySelector('button.btn-quarto');\n  if (razbut) {\n    razbut.classList.remove('btn-quarto');\n    razbut.classList.add('btn-danger');\n  }  \n\n// RESTYLING of INPUT\n  const mii = viewof RefInput.querySelector('div');\n  if (mii) {\n    mii.classList.add(\"form-control\");\n  }\n  \n  const inp = mii.querySelector('input');\n  if (inp) {\n    inp.style.border = \"none\";\n    inp.style.outline = \"none\";\n  }\n}\n\n// VIEWOF\nhtml`&lt;div class=\"button-row\"&gt;\n    ${viewof RefInput}\n    ${viewof AccuStorage}\n    ${viewof CopyButton}\n    ${viewof HelpButton}\n    ${viewof RazButton}\n &lt;/div&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhtml`${RefPreview.map(item =&gt; html`&lt;div style=\"line-height: 1.4; margin-bottom: 10px; color: amber\"&gt;&lt;strong&gt;${item.ref}&lt;/strong&gt; ${item.content} &lt;em&gt;${item.version}&lt;/em&gt;&lt;/div&gt;`)}`\n\n\n\n\n\n\n\n\n\nRefData = {\n  // DATA is imported from BibleBooksCodes_Tables.js\n    const mir = new Ref(AccuStorage);\n    await mir.fetch_parallel();   // Wait for data to be fetched\n    const miresult = await mir.data\n    return miresult\n}\n\n// DISPLAY the list with Details and Summary\nhtml`${RefData.map(item =&gt; html`&lt;details style=\"line-height: 1.6; margin-bottom: 10px;\"&gt;&lt;summary&gt;&lt;strong&gt;${item.ref} &lt;/strong&gt;&lt;span style='font-size: 0.9em;'&gt;&lt;em&gt; ${item.content.slice(0,45)} ...&lt;/em&gt;&lt;/span&gt;&lt;/summary&gt;${item.content} &lt;em&gt;${item.version}&lt;/em&gt;  ${item.cacheStatus}:${item.duration_fetch}ms&lt;/details&gt;`)}`"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Ynot (Why not!) is my personal gitHub repo to store infos as issues, that are anchored to any pages of my other websites.\nYnot is sourced from docker rv5/ynot..\n\n\n\n\n\n\n\n\n\n\n\n\nbible_fetch API\n\n\n\n\n\n\n\n\n\n\n\nMay 22, 2025\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nverseRun\n\n\n\n\n\n\n\n\n\n\n\nSep 8, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nStorage with Javascript\n\n\n\n\n\n\n\n\n\n\n\nOct 14, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nGlobal Note\n\n\n\n\n\n\n\n\n\n\n\nMay 17, 2025\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nbibGrid\n\n\n\n\n\n\n\n\n\n\n\nJul 9, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nexcursions\n\n\n\n\n\n\n\n\n\n\n\nOct 21, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\naccuStorage\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\n\n\nSep 29, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\n\n\n\n\n\n\nRomans Note\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrésidence Etoile\n\n\n\n\n\n\n\n\n\n\n\nOct 1, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nimmobilier\n\n\n\n\n\n\n\n\n\n\n\nOct 1, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To EditorJS\n\n\n\n\n\n\n\n\n\n\n\nMay 16, 2025\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To CKeditor\n\n\n\n\n\n\n\n\n\n\n\nSep 29, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nnotes\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\npriorités\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nmake_a_PDF\n\n\nProof of Concept\n\n\n\n\n\n\n\n\nSep 9, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nlua_Shortcode\n\n\nProof of Concept\n\n\n\n\n\n\n\n\nSep 9, 2025\n\n\n\n\n\n\n\n\n\n\n\n\ngospel banner\n\n\n\n\n\n\n\n\n\n\n\nOct 14, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nbible techpad\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nraw content\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nDOM via Javascript\n\n\n\n\n\n\n\n\n\n\n\nOct 14, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nmemo_verse\n\n\n\n\n\n\n\n\n\n\n\nDec 28, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nverses.PDF\n\n\nProof of Concept\n\n\n\n\n\n\n\n\nSep 9, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nverseComment\n\n\n\n\n\n\n\n\n\n\n\nSep 9, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nSuccession\n\n\n\n\n\n\n\n\n\n\n\nNov 7, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nNote Prophete\n\n\n\n\n\n\n\n\n\n\n\nMay 17, 2025\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nIframe\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nObservables\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nIT\n\n\n\n\n\n\n\n\n\n\n\nOct 14, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\njsfapi\n\n\n\n\n\n\n\n\n\n\n\nOct 11, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\ncuisine\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2024\n\n\ngranPiero\n\n\n\n\n\n\n\n\n\n\n\n\nBible access\n\n\n\n\n\n\n\n\n\n\n\nMay 21, 2025\n\n\ngranPiero\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "rchunk/example.html",
    "href": "rchunk/example.html",
    "title": "Rchunk Example",
    "section": "",
    "text": "This filter adds formatting to heading text.\n\na &lt;- 0\ncat(summary(mtcars))\n\nMin.   :10.40   1st Qu.:15.43   Median :19.20   Mean   :20.09   3rd Qu.:22.80   Max.   :33.90   Min.   :4.000   1st Qu.:4.000   Median :6.000   Mean   :6.188   3rd Qu.:8.000   Max.   :8.000   Min.   : 71.1   1st Qu.:120.8   Median :196.3   Mean   :230.7   3rd Qu.:326.0   Max.   :472.0   Min.   : 52.0   1st Qu.: 96.5   Median :123.0   Mean   :146.7   3rd Qu.:180.0   Max.   :335.0   Min.   :2.760   1st Qu.:3.080   Median :3.695   Mean   :3.597   3rd Qu.:3.920   Max.   :4.930   Min.   :1.513   1st Qu.:2.581   Median :3.325   Mean   :3.217   3rd Qu.:3.610   Max.   :5.424   Min.   :14.50   1st Qu.:16.89   Median :17.71   Mean   :17.85   3rd Qu.:18.90   Max.   :22.90   Min.   :0.0000   1st Qu.:0.0000   Median :0.0000   Mean   :0.4375   3rd Qu.:1.0000   Max.   :1.0000   Min.   :0.0000   1st Qu.:0.0000   Median :0.0000   Mean   :0.4062   3rd Qu.:1.0000   Max.   :1.0000   Min.   :3.000   1st Qu.:3.000   Median :4.000   Mean   :3.688   3rd Qu.:4.000   Max.   :5.000   Min.   :1.000   1st Qu.:2.000   Median :2.000   Mean   :2.812   3rd Qu.:4.000   Max.   :8.000  \n\n\ncat(summary(mtcars))"
  },
  {
    "objectID": "rchunk/example.html#heading",
    "href": "rchunk/example.html#heading",
    "title": "Rchunk Example",
    "section": "",
    "text": "This filter adds formatting to heading text.\n\na &lt;- 0\ncat(summary(mtcars))\n\nMin.   :10.40   1st Qu.:15.43   Median :19.20   Mean   :20.09   3rd Qu.:22.80   Max.   :33.90   Min.   :4.000   1st Qu.:4.000   Median :6.000   Mean   :6.188   3rd Qu.:8.000   Max.   :8.000   Min.   : 71.1   1st Qu.:120.8   Median :196.3   Mean   :230.7   3rd Qu.:326.0   Max.   :472.0   Min.   : 52.0   1st Qu.: 96.5   Median :123.0   Mean   :146.7   3rd Qu.:180.0   Max.   :335.0   Min.   :2.760   1st Qu.:3.080   Median :3.695   Mean   :3.597   3rd Qu.:3.920   Max.   :4.930   Min.   :1.513   1st Qu.:2.581   Median :3.325   Mean   :3.217   3rd Qu.:3.610   Max.   :5.424   Min.   :14.50   1st Qu.:16.89   Median :17.71   Mean   :17.85   3rd Qu.:18.90   Max.   :22.90   Min.   :0.0000   1st Qu.:0.0000   Median :0.0000   Mean   :0.4375   3rd Qu.:1.0000   Max.   :1.0000   Min.   :0.0000   1st Qu.:0.0000   Median :0.0000   Mean   :0.4062   3rd Qu.:1.0000   Max.   :1.0000   Min.   :3.000   1st Qu.:3.000   Median :4.000   Mean   :3.688   3rd Qu.:4.000   Max.   :5.000   Min.   :1.000   1st Qu.:2.000   Median :2.000   Mean   :2.812   3rd Qu.:4.000   Max.   :8.000  \n\n\ncat(summary(mtcars))"
  },
  {
    "objectID": "posts/bible-fetch-api/index.html",
    "href": "posts/bible-fetch-api/index.html",
    "title": "bible_fetch API",
    "section": "",
    "text": "Bible API technologies, in fetch action; to be reviewed.\n\n\n\n\n\n\nconsole.log(\"toto\")\nconst app = new App();\n\n// app.m_fetchPassage(\"ps42!KJV\");\n\n\n\nconsole.log(\"toto2\")\nfetchData(\"ps42!KJV\");"
  },
  {
    "objectID": "posts/storage/index.html",
    "href": "posts/storage/index.html",
    "title": "Storage with Javascript",
    "section": "",
    "text": "Demonstrate the feasibility of user interaction (input, action) with LocalStorage (set, get).\n\n\nModify the DOM: take an input, trigger a button to echo the value and save to LocalStorage\n\n\n\nSubmit to LocalStorage\n\n\n\n\nRead Back from LocalStorage: Trigger the retrieval and echo the value\n\n\nRetrieve from LocalStorage\n\n\n\nOne script inserted here handles that all.\n\n\nmake it a content script extension."
  },
  {
    "objectID": "posts/bibGrid/index.html",
    "href": "posts/bibGrid/index.html",
    "title": "bibGrid",
    "section": "",
    "text": "Grid of Bible Books, Abbreviations, Chapter_Max.\n\n\ninputDiv is considered Void\n\n\nimport { html } from \"@observablehq/stdlib\";\n\n// Inputs\nviewof userRef_new = html`&lt;input type=\"text\" \n  class=\"form-control\" \n  style=\"width: 150px;\"\n  value=\"ps40:1!KJV\"/&gt;`;\n  \n// VIEWOF\nhtml`&lt;div class=\"row container\"&gt;\n  Lookup&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  ${viewof userRef_new}\n  &lt;/div&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Ref, Bcve, Books, BibleBooksCodes } from \"./ref.js\";\n\n//valid_param = userRef_new;\n\nvalid_param = {\n  const mb = new Bcve(userRef_new);\n//  return mb;\n///  const BBC = new BibleBooksCodes();\n//  return BBC.getBBBFromText(mb.book);\n  return mb.param\n}\n\n// VIEWOF\nhtml`&lt;div class=\"row container\"&gt;\n  Validation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  ${valid_param}\n  &lt;/div&gt;`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nany output comes here"
  },
  {
    "objectID": "posts/accuStorage/index.html",
    "href": "posts/accuStorage/index.html",
    "title": "accuStorage",
    "section": "",
    "text": "The AccuStorage Button\n\n\n\n\n\nimport { Inputs } from \"@observablehq/inputs\";\nimport { html } from \"@observablehq/stdlib\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof theme = {\n  const key = \"theme\"\n  const stored = localStorage.getItem(key)\n  const initial = stored ?? \"light\"\n\n  const input = Inputs.select([\"light\", \"dark\"], {\n    label: \"Theme\",\n    value: initial\n  })\n\n  // Sync to localStorage on change\n  input.addEventListener(\"input\", () =&gt; {\n    localStorage.setItem(key, input.value)\n  })\n\n  return input\n}\n\n\n\n\n\n\n\nviewof AccuStorage = {\n  //  INITIALISATION READ from LocalStorage\n  const _STORAGE_KEY = \"RefAccu\"\n  const stored = JSON.parse(localStorage.getItem(_STORAGE_KEY))\n  const _INITIAL = stored ?? [\"Gen1:1\"]\n  \n  const accuButton = Inputs.button(\"Keep\", {\n    value: _INITIAL,\n    reduce: (list) =&gt; {\n      const input = \"Gal2:20\"\n//      const input = viewof RefInput.value;\n//      const validated = new Bcve(input);\n//      const result = validated.is_valid ? [validated.param, ...list ] : [...list]\n      const uniqueResult = [...list, input ]\n//      const uniqueResult = [...new Set(result)];\n  // STORE persistent\n      localStorage.setItem(_STORAGE_KEY, JSON.stringify(uniqueResult));\n      return uniqueResult // new accumulated value\n      } // end of reduce\n    });\n    \n    return accuButton\n}\n\nAccuStorage;"
  },
  {
    "objectID": "posts/romans_note/index.html",
    "href": "posts/romans_note/index.html",
    "title": "Romans Note",
    "section": "",
    "text": "This is a Global Note on Romans (using EditorJS and localStorage autosave mechanisms)\n\n\nthis is inputDiv\nthis is editorDiv"
  },
  {
    "objectID": "posts/immobilier/index.html",
    "href": "posts/immobilier/index.html",
    "title": "immobilier",
    "section": "",
    "text": "Point de départ du projet d’habitation à Montpellier.\n\nhttps://www.avendrealouer.fr/professionnels/montpellier-34/loc-101-16124.html\nhttps://www.seloger.com/classified-search?distributionTypes=Buy,Buy_Auction&estateTypes=House&locations=AD08FR13752"
  },
  {
    "objectID": "posts/cke/index_cke.html",
    "href": "posts/cke/index_cke.html",
    "title": "Welcome To CKeditor",
    "section": "",
    "text": "Concept of CKEditor\n\nThis is the first post in a Quarto blog to use CKeditor.\nHas format: html: include: include-on-header:\nHas also html: comments: utterances: repo:"
  },
  {
    "objectID": "posts/priorités/index.html",
    "href": "posts/priorités/index.html",
    "title": "priorités",
    "section": "",
    "text": "Organise the tree of priorities\n\nimportant first"
  },
  {
    "objectID": "posts/bible_techpad/index.html",
    "href": "posts/bible_techpad/index.html",
    "title": "bible techpad",
    "section": "",
    "text": "Bible Search and Lookup technologies. Ideapad\n\n\n\n[1] \"1e6448ba-7307-47a0-9950-53c1c1da45c6\""
  },
  {
    "objectID": "posts/DOM via Javascript/index.html",
    "href": "posts/DOM via Javascript/index.html",
    "title": "DOM via Javascript",
    "section": "",
    "text": "Modify the DOM: take an input, trigger a button, echo the value.\n\n\n\nSubmit\n\n\n\n\n\nUpdate an iframe’s content via its src attribute.\n\n Display  \n\n\nConclusion: Abandon ObersvableJS technology because of CSS-styling hurdle."
  },
  {
    "objectID": "posts/succession/index.html",
    "href": "posts/succession/index.html",
    "title": "Succession",
    "section": "",
    "text": "Everything related to succession Fischer-Durrenberger."
  },
  {
    "objectID": "posts/iframe/index.html",
    "href": "posts/iframe/index.html",
    "title": "Iframe",
    "section": "",
    "text": "First use of an iframe element to display src = https://jsfapi.netlify.app/.netlify/functions/bgw?param=ps42:5!KJV\n\n\n\nConclusion: we abandon iframe technology."
  },
  {
    "objectID": "posts/IT/index.html",
    "href": "posts/IT/index.html",
    "title": "IT",
    "section": "",
    "text": "Everything related to technology."
  },
  {
    "objectID": "posts/cuisine/index.html",
    "href": "posts/cuisine/index.html",
    "title": "cuisine",
    "section": "",
    "text": "Recettes de cuisine éprouvées."
  }
]